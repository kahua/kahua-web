;;-*- mode: kahua; coding: utf-8 -*-
;; Object(image/flash/applet etc...) uploading
;;
;;  Copyright (c) 2007 Kahua Project, All rights reserved.
;;  See COPYING for terms and conditions of using this software
;;
;; $Id: upload.kahua,v 1.3 2007/05/18 08:57:16 bizenn Exp $

(use file.util)
(use fileio)
(use rfc.uri)
(use util.list)

(define kahua-web-static-uploadable? kahua-web-authorized?)

(define (canonical-static-path-info path)
  (define (simplify-path-info path-info)
    (reverse!
     (fold (lambda (e r)
	     (cond ((string=? e "")  r)
		   ((string=? e ".") r)
		   ((string=? e "..")
		    (if (null? r)
			r
			(cdr r)))
		   (else (cons e r))))
	   '()
	   path-info)))
  (simplify-path-info (string-split path #[/])))

(define (static-object-upload-form fullpath page)
  (define (make-upload-entry)
    (entry-lambda (:keyword inlineobj)
      (make-directory* (sys-dirname fullpath))
      (save-uploaded-file inlineobj fullpath)
      (redirect-to page)))
  `((form/cont
     (@@ (cont ,(make-upload-entry)))
     (@ (class "inline-object-upload") (enctype "multipart/form-data"))
     (input (@ (type "file") (name "inlineobj")))
     (input (@ (type "submit") (value "upload"))))))

(define (uploadable-inline-static-object elem-maker validator url)
  (define (->path-info path)
    (receive (scheme _ _ _ npath _ _) (uri-parse path)
      (if scheme
	  path
	  (canonical-static-path-info path))))

  (let1 path-info  (->path-info (x->string url))
    (cond
     ;; Full URI(external link).
     ((string? path-info) (values (elem-maker path-info) #f))
     ;; Relative Path(internal link).
     (else
      (unless (validator url)
	(error "Invalid Image URL: " url))
      (let1 fullpath (apply kahua-static-document-path "kahua-web" path-info)
	(if (or (file-exists? fullpath)
		(not (kahua-web-static-uploadable?)))
	    (values (elem-maker (apply kahua-static-document-url "kahua-web" path-info)) #f)
	    (values (static-object-upload-form fullpath (current-page)) #t)))))))
